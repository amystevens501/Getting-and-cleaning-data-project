Getting and Cleaning Data Project 
This repo contains project code for Getting and Cleaning Data course given by John Hopkins University on Coursera.

Refer to the readme file for background on this project.
Data sets
Raw data set
The experiments have been carried out with a group of 30 volunteers within an age bracket of 19-48 years. Each person performed six activities (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING) wearing a smartphone (Samsung Galaxy S II) on the waist. Using its embedded accelerometer and gyroscope, we captured 3-axial linear acceleration and 3-axial angular velocity at a constant rate of 50Hz. The experiments have been video-recorded to label the data manually. The obtained dataset has been randomly partitioned into two sets, where 70% of the volunteers was selected for generating the training data and 30% the test data. 

The sensor signals (accelerometer and gyroscope) were pre-processed by applying noise filters and then sampled in fixed-width sliding windows of 2.56 sec and 50% overlap (128 readings/window). The sensor acceleration signal, which has gravitational and body motion components, was separated using a Butterworth low-pass filter into body acceleration and gravity. The gravitational force is assumed to have only low frequency components, therefore a filter with 0.3 Hz cutoff frequency was used. From each window, a vector of features was obtained by calculating variables from the time and frequency domain. See 'features_info.txt' for more details. 

The dataset includes the following files:
=========================================

-  'features_info.txt': Shows information about the variables used on the feature vector.

- 'features.txt': List of all features.

- 'activity_labels.txt': Links the class labels with their activity name.

- 'train/X_train.txt': Training set.

- 'train/y_train.txt': Training labels.

- 'test/X_test.txt': Test set.

- 'test/y_test.txt': Test labels.

The following files are available for the train and test data. Their descriptions are equivalent. 

- 'train/subject_train.txt': Each row identifies the subject who performed the activity for each window sample. Its range is from 1 to 30. 

Step 1. 
For the first step of this project, all of the above data files were combined into a single data file by reading each file in separately using read.table and then merging the subsequent  tables into a single table: MergedDataSet

In Step 2.
Only the STD and Mean measurements are extracted using the grepl command.  The results are stored in the MeanStdData Set 

In Step 3
Descriptive activity names are added to the data. Resulting data set called: activitylabeldata

In Step 4
Column names are cleaned up by removing () and – and changing BodyBody to simply Body. Resulting data set called activitylabeldata2

In Step 5
This the final data set with the average of each variable for each activity and each subject. This data file is written out to a text file as the final deliverable file:  TidyData.txt. 180 X 81

Tidy data set
Tidy data set contains the same variables as the raw does, but the variables were renamed according to following rules:
•	All lower case when possible – for readability, the variables names were not converted to lower case. 
•	Not duplicated - the variable names are unique, so again nothing special had to be done.
•	Underscores, dashes and parentheses were removed from variable names.
•	BodyBody was cleaned up to be Body

Variables in raw and tidy data set
Raw data set	    Tidy data set
ID
activityID  ActivityID
tBodyAcc-mean()-X	tBodyAccMeanX
tBodyAcc-mean()-Y	tBodyAccMeanY
tBodyAcc-mean()-Z	tBodyAccMeanZ
tBodyAcc-std()-X	tBodyAccStdX
tBodyAcc-std()-Y	tBodyAccStdY
tBodyAcc-std()-Z	tBodyAccStdZ
tGravityAcc-mean()-X	tGravityAccMeanX
tGravityAcc-mean()-Y	tGravityAccMeanY
tGravityAcc-mean()-Z	tGravityAccMeanZ
tGravityAcc-std()-X	tGravityAccStdX
tGravityAcc-std()-Y	tGravityAccStdY
tGravityAcc-std()-Z	tGravityAccStdZ
tBodyAccJerk-mean()-X	tBodyAccJerkMeanX
tBodyAccJerk-mean()-Y	tBodyAccJerkMeanY
tBodyAccJerk-mean()-Z	tBodyAccJerkMeanZ
tBodyAccJerk-std()-X	tBodyAccJerkStdX
tBodyAccJerk-std()-Y	tBodyAccJerkStdY
tBodyAccJerk-std()-Z	tBodyAccJerkStdZ
tBodyGyro-mean()-X	tBodyGyroMeanX
tBodyGyro-mean()-Y	tBodyGyroMeanY
tBodyGyro-mean()-Z	tBodyGyroMeanZ
tBodyGyro-std()-X	tBodyGyroStdX
tBodyGyro-std()-Y	tBodyGyroStdY
tBodyGyro-std()-Z	tBodyGyroStdZ
tBodyGyroJerk-mean()-X	tBodyGyroJerkMeanX
tBodyGyroJerk-mean()-Y	tBodyGyroJerkMeanY
tBodyGyroJerk-mean()-Z	tBodyGyroJerkMeanZ
tBodyGyroJerk-std()-X	tBodyGyroJerkStdX
tBodyGyroJerk-std()-Y	tBodyGyroJerkStdY
tBodyGyroJerk-std()-Z	tBodyGyroJerkStdZ
tBodyAccMag-mean()	tBodyAccMagMean
tBodyAccMag-std()	tBodyAccMagStd
tGravityAccMag-mean()	tGravityAccMagMean
tGravityAccMag-std()	tGravityAccMagStd
tBodyAccJerkMag-mean()	tBodyAccJerkMagMean
tBodyAccJerkMag-std()	tBodyAccJerkMagStd
tBodyGyroMag-mean()	tBodyGyroMagMean
tBodyGyroMag-std()	tBodyGyroMagStd
tBodyGyroJerkMag-mean()	tBodyGyroJerkMagMean
tBodyGyroJerkMag-std()	tBodyGyroJerkMagStd
fBodyAcc-mean()-X	fBodyAccMeanX
fBodyAcc-mean()-Y	fBodyAccMeanY
fBodyAcc-mean()-Z	fBodyAccMeanZ
fBodyAcc-std()-X	fBodyAccStdX
fBodyAcc-std()-Y	fBodyAccStdY
fBodyAcc-std()-Z	fBodyAccStdZ
fBodyAccJerk-mean()-X	fBodyAccJerkMeanX
fBodyAccJerk-mean()-Y	fBodyAccJerkMeanY
fBodyAccJerk-mean()-Z	fBodyAccJerkMeanZ
fBodyAccJerk-std()-X	fBodyAccJerkStdX
fBodyAccJerk-std()-Y	fBodyAccJerkStdY
fBodyAccJerk-std()-Z	fBodyAccJerkStdZ
fBodyGyro-mean()-X	fBodyGyroMeanX
fBodyGyro-mean()-Y	fBodyGyroMeanY
fBodyGyro-mean()-Z	fBodyGyroMeanZ
fBodyGyro-std()-X	fBodyGyroStdX
fBodyGyro-std()-Y	fBodyGyroStdY
fBodyGyro-std()-Z	fBodyGyroStdZ
fBodyAccMag-mean()	fBodyAccMagMean
fBodyAccMag-std()	fBodyAccMagStd
fBodyBodyAccJerkMag-mean()	fBodyAccJerkMagMean
fBodyBodyAccJerkMag-std()	fBodyAccJerkMagStd
fBodyBodyGyroMag-mean()	fBodyGyroMagMean
fBodyBodyGyroMag-std()	fBodyGyroMagStd
fBodyBodyGyroJerkMag-mean()	fBodyGyroJerkMagMean
fBodyBodyGyroJerkMag-std()	fBodyGyroJerkMagStd

